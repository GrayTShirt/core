package main

type Library struct {
	Import string
	Code   string
}

/* NOTE: THIS FILE IS AUTOGENERATED! */

var StandardLibrary = map[string] string{
	"sys.graph": `%
% bolo standard library
% 2018-03-06
%

def memory($title, $size, $query) {
  graph {
    size  $size
    label $title
    query [SELECT mem.total,
                  mem.used,
                  mem.buffers,
                  mem.cached    $query]

    y-axis on
    y-axis label "Memory Used"
    y-axis format bytes

    plot "mem.buffers" { as stack color #cc0 }
    plot "mem.cached"  { as stack color #6ff }
    plot "mem.used"    { as stack color #00994c }

    plot "mem.total" { as line color #000 width 3 }
  }
}

def swap($size, $title, $query) {
  graph {
    size  $size
    label $title
    query [SELECT swap.total,
                  swap.used,
                  swap.cached   $query]

    y-axis on
    y-axis label "Swap Used"
    y-axis format bytes

    plot "swap.cached"  { as stack color #6ff }
    plot "swap.used"    { as stack color #00994c }

    plot "swap.total" { as line color #000 width 2 }
  }
}

def df($size, $title, $query) {
  graph {
    size  $size
    label $title
    query [SELECT fs.bytes.total                 AS total,
                  fs.bytes.total - fs.bytes.free AS used
                  $query]

    y-axis on
    y-axis label "Disk Space Used"
    y-axis format bytes

    plot "used"  { as stack color #66b2ff }
    plot "total" { as line color #000 width 2 }
  }
}

def cswitch($size, $title, $query) {
  graph {
    size  $size
    label $title
    query [SELECT delta(context.switches) AS csw
                  $query]

    y-axis on
    y-axis label "Kernel Context Switches"
    y-axis format si

    plot "csw" { as line color #004c99 width 2 }
  }
}

def forks($size, $title, $query) {
  graph {
    size  $size
    label $title
    query [SELECT delta(context.forks) AS csw
                  $query]

    y-axis on
    y-axis label "Process Forks"
    y-axis format si

    plot "csw" { as line color #004c99 width 2 }
  }
}
`,
}
